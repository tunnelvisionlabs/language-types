// Copyright (c) Tunnel Vision Laboratories, LLC. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace TunnelVisionLabs.LanguageTypes.SourceGenerator.UnitTests
{
    using System.Threading.Tasks;
    using Microsoft.CodeAnalysis.CSharp;
    using Microsoft.CodeAnalysis.Testing;
    using Xunit;
    using VerifyCS = TunnelVisionLabs.LanguageTypes.SourceGenerator.UnitTests.Verifiers.CSharpSourceGeneratorVerifier<
        TunnelVisionLabs.LanguageTypes.SourceGenerator.IsExternalInitSourceGenerator>;

    public class IsExternalInitSourceGeneratorTests
    {
        [Fact]
        public async Task TestTypesGenerated()
        {
            await new VerifyCS.Test
            {
                TestState =
                {
                    ReferenceAssemblies = ReferenceAssemblies.NetStandard.NetStandard20,
                    Sources =
                    {
                    },
                    GeneratedSources =
                    {
                        (typeof(IsExternalInitSourceGenerator), "IsExternalInit.g.cs", @"// <auto-generated/>

#nullable enable

namespace System.Runtime.CompilerServices
{
    using System.ComponentModel;

    /// <summary>
    /// Reserved to be used by the compiler for tracking metadata.
    /// This class should not be used by developers in source code.
    /// </summary>
    [EditorBrowsable(EditorBrowsableState.Never)]
    internal static class IsExternalInit
    {
    }
}
".ReplaceLineEndings("\r\n")),
                    },
                },
                LanguageVersion = LanguageVersion.CSharp10,
            }.RunAsync();
        }

        [Fact]
        public async Task TestTypesForwarded()
        {
            await new VerifyCS.Test
            {
                TestState =
                {
                    ReferenceAssemblies = ReferenceAssemblies.Net.Net50,
                    Sources =
                    {
                    },
                    GeneratedSources =
                    {
                        (typeof(IsExternalInitSourceGenerator), "CompilerForwarders.g.cs", @"// <auto-generated/>

#nullable enable

using System.Runtime.CompilerServices;

[assembly: TypeForwardedTo(typeof(IsExternalInit))]
".ReplaceLineEndings("\r\n")),
                    },
                },
                LanguageVersion = LanguageVersion.CSharp10,
            }.RunAsync();
        }

        [Fact]
        public async Task TestTypesProvided()
        {
            await new VerifyCS.Test
            {
                TestState =
                {
                    ReferenceAssemblies = ReferenceAssemblies.NetStandard.NetStandard20,
                    Sources =
                    {
                        @"namespace System.Runtime.CompilerServices { class IsExternalInit { } }",
                    },
                    GeneratedSources =
                    {
                    },
                },
                LanguageVersion = LanguageVersion.CSharp10,
            }.RunAsync();
        }
    }
}
